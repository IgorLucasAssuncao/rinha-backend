x-service-templates:
  backend: &backend
    image: ghcr.io/igorlucasassuncao/rinha-backend:latest
   # build: .
    deploy:
      resources:
        limits:
          cpus: "0.45"
          memory: "85MB"
    networks:
      - backend
      - payment-processor

services:
  backend-1:
    <<: *backend
    container_name: backend-1
    hostname: backend-1
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__Redis=redis:6379
      - ConnectionStrings__default=http://payment-processor-default:8080
      - ConnectionStrings__fallback=http://payment-processor-fallback:8080
      - ConnectionStrings__postgres=Host=rinha-db;Port=5432;Database=rinha;Username=postgres;Password=postgres;Pooling=true;Maximum Pool Size=256;Multiplexing=true;Timeout=15;Command Timeout=15;Cancellation Timeout=-1;No Reset On Close=true;Max Auto Prepare=20;Auto Prepare Min Usages=1;
  backend-2:
    <<: *backend
    container_name: backend-2
    hostname: backend-2
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__default=http://payment-processor-default:8080
      - ConnectionStrings__fallback=http://payment-processor-fallback:8080
      - ConnectionStrings__postgres=Host=rinha-db;Port=5432;Database=rinha;Username=postgres;Password=postgres;Pooling=true;Maximum Pool Size=200;Multiplexing=true;Timeout=15;Command Timeout=15;Cancellation Timeout=-1;No Reset On Close=true;Max Auto Prepare=20;Auto Prepare Min Usages=1;
  
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend-1
      - backend-2
    ports:
      - "9999:8080"
    networks:
      - backend
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "35MB"
  rinha-db:
    image: postgres:17-alpine
    command: 'postgres -c max_connections=400 -c synchronous_commit=off -c fsync=off -c full_page_writes=off'
    networks:
      - payment-processor
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=rinha
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d rinha" ]
      interval: 1s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "115MB"
  redis:
   image: redis:8-alpine
   restart: always
   hostname: redis
   container_name: redis 
   command: >
       redis-server --save "" --appendonly no --maxclients 1024
                --maxmemory 30mb --maxmemory-policy allkeys-lru 
                --stop-writes-on-bgsave-error no --rdbcompression no
                --hz 100 --tcp-backlog 511 --timeout 0
                --loglevel warning
   networks:
    - backend
   healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 2s
        timeout: 2s
        retries: 10
   deploy:
    resources:
      limits:
        cpus: '0.1'
        memory: '30MB'

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true